# https://blog.pinfort.me/posts/myhome-elastic-cloud-on-kubernetes/

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: eck-operator-crds
spec:
  project: default
  source:
    chart: eck-operator-crds
    repoURL: https://helm.elastic.co/
    targetRevision: 2.12.1
    helm:
      releaseName: eck-operator-crds
  destination:
    server: https://kubernetes.default.svc
    namespace: elastic-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - Replace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: eck-operator
spec:
  project: default
  source:
    chart: eck-operator
    repoURL: https://helm.elastic.co/
    targetRevision: 2.12.1
    helm:
      releaseName: eck-operator
      values: |
        installCRDs: false
        webhook:
          enabled:: false
        
  destination:
    server: https://kubernetes.default.svc
    namespace: elastic-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: eck-stack
spec:
  project: default
  source:
    chart: eck-stack
    repoURL: https://helm.elastic.co/
    targetRevision: 0.10.0
    helm:
      releaseName: eck-stack
      values: |
        # base: https://raw.githubusercontent.com/elastic/cloud-on-k8s/2.12/deploy/eck-stack/examples/agent/fleet-agents.yaml
        eck-elasticsearch:
          enabled: true

          # Name of the Elasticsearch instance.
          #
          fullnameOverride: elasticsearch

          nodeSets:
          - name: default
            count: 3
            # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
            # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
            # and leave node.store.allow_mmap unset.
            # ref: https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-virtual-memory.html
            #
            config:
              node.store.allow_mmap: false

        eck-kibana:
          enabled: true

          # Name of the Kibana instance.
          #
          fullnameOverride: kibana
          
          spec:
            # Reference to ECK-managed Elasticsearch instance, ideally from {{ "elasticsearch.fullname" }}
            #
            elasticsearchRef:
              name: elasticsearch

            config:
              # Note that these are specific to the namespace into which this example is installed, and are
              # using `elastic-stack` as configured here and detailed in the README when installing:
              #
              # `helm install es-kb-quickstart elastic/eck-stack -n elastic-stack`
              #
              # If installed outside of the `elastic-stack` namespace, the following 2 lines need modification.
              xpack.fleet.agents.elasticsearch.hosts: ["https://elasticsearch-es-http.elastic-stack.svc:9200"]
              xpack.fleet.agents.fleet_server.hosts: ["https://fleet-server-agent-http.elastic-stack.svc:8220"]
              xpack.fleet.packages:
              - name: system
                version: latest
              - name: elastic_agent
                version: latest
              - name: fleet_server
                version: latest
              - name: kubernetes
                version: latest
              xpack.fleet.agentPolicies:
              - name: Fleet Server on ECK policy
                id: eck-fleet-server
                namespace: default
                monitoring_enabled:
                - logs
                - metrics
                package_policies:
                - name: fleet_server-1
                  id: fleet_server-1
                  package:
                    name: fleet_server
              - name: Elastic Agent on ECK policy
                id: eck-agent
                namespace: default
                monitoring_enabled:
                - logs
                - metrics
                unenroll_timeout: 900
                package_policies:
                - package:
                    name: system
                  name: system-1
                - package:
                    name: kubernetes
                  name: kubernetes-1

        eck-agent:
          enabled: true
          
          spec:
            # Agent policy to be used.
            policyID: eck-agent
            # Reference to ECK-managed Kibana instance.
            #
            kibanaRef:
              name: kibana

            elasticsearchRefs: []

            # Reference to ECK-managed Fleet instance.
            #
            fleetServerRef:
              name: fleet-server
            
            mode: fleet

            daemonSet:
              podTemplate:
                spec:
                  serviceAccountName: elastic-agent
                  hostNetwork: true
                  dnsPolicy: ClusterFirstWithHostNet
                  automountServiceAccountToken: true
                  securityContext:
                    runAsUser: 0
          
        eck-fleet-server:
          enabled: true

          fullnameOverride: "fleet-server"

          spec:
            # Agent policy to be used.
            policyID: eck-fleet-server
            kibanaRef:
              name: kibana
            elasticsearchRefs:
            - name: elasticsearch

        eck-logstash:
          enabled: true
          count: 2
          monitoring:
            metrics:
              elasticsearchRefs:
              - name: elasticsearch
            logs:
              elasticsearchRefs:
              - name: elasticsearch
          # This is required to be able to set the logstash
          # output of beats in a consistent manner.
          fullnameOverride: "logstash-ls-beats"
          elasticsearchRefs:
            # This clusterName is required to match the environment variables
            # used in the below config.string output section.
            - clusterName: eck
              name: elasticsearch
          pipelines:
            - pipeline.id: main
              config.string: |
                input {
                  tcp {
                    port => 5044
                    codec => json
                  }
                }
                output {
                  elasticsearch {
                    hosts => [ "${ECK_ES_HOSTS}" ]
                    user => "${ECK_ES_USER}"
                    password => "${ECK_ES_PASSWORD}"
                    ssl_certificate_authorities => "${ECK_ES_SSL_CERTIFICATE_AUTHORITY}"
                  }
                }
          services:
            - name: beats
              service:
                spec:
                  type: NodePort
                  ports:
                    - nodePort: 31111
                      port: 5044
                      name: "logstash"
                      protocol: TCP
                      
        eck-beats:
          enabled: true
          name: metricbeat
          spec:
            type: metricbeat
            version: 8.13.0
            elasticsearchRef:
              name: elasticsearch
            kibanaRef:
              name: kibana
            config:
              # Since filebeat is used in the default values, this needs to be removed with an empty list. 
              filebeat.inputs: []
              metricbeat:
                autodiscover:
                  providers:
                  - hints:
                      default_config: {}
                      enabled: "true"
                    node: ${NODE_NAME}
                    type: kubernetes
                modules:
                - module: system
                  period: 10s
                  metricsets:
                  - cpu
                  - load
                  - memory
                  - network
                  - process
                  - process_summary
                  process:
                    include_top_n:
                      by_cpu: 5
                      by_memory: 5
                  processes:
                  - .*
                - module: system
                  period: 1m
                  metricsets:
                  - filesystem
                  - fsstat
                  processors:
                  - drop_event:
                      when:
                        regexp:
                          system:
                            filesystem:
                              mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib)($|/)
                - module: kubernetes
                  period: 10s
                  node: ${NODE_NAME}
                  hosts:
                  - https://${NODE_NAME}:10250
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  ssl:
                    verification_mode: none
                  metricsets:
                  - node
                  - system
                  - pod
                  - container
                  - volume
              processors:
              - add_cloud_metadata: {}
              - add_host_metadata: {}
            daemonSet:
              podTemplate:
                spec:
                  serviceAccountName: metricbeat
                  automountServiceAccountToken: true # some older Beat versions are depending on this settings presence in k8s context
                  containers:
                  - args:
                    - -e
                    - -c
                    - /etc/beat.yml
                    - -system.hostfs=/hostfs
                    name: metricbeat
                    volumeMounts:
                    - mountPath: /hostfs/sys/fs/cgroup
                      name: cgroup
                    - mountPath: /var/run/docker.sock
                      name: dockersock
                    - mountPath: /hostfs/proc
                      name: proc
                    env:
                    - name: NODE_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: spec.nodeName
                  dnsPolicy: ClusterFirstWithHostNet
                  hostNetwork: true # Allows to provide richer host metadata
                  securityContext:
                    runAsUser: 0
                  terminationGracePeriodSeconds: 30
                  volumes:
                  - hostPath:
                      path: /sys/fs/cgroup
                    name: cgroup
                  - hostPath:
                      path: /var/run/docker.sock
                    name: dockersock
                  - hostPath:
                      path: /proc
                    name: proc
          
          clusterRole:
            # permissions needed for metricbeat
            # source: https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-module-kubernetes.html
            name: metricbeat
            rules:
            - apiGroups:
              - ""
              resources:
              - nodes
              - namespaces
              - events
              - pods
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - "extensions"
              resources:
              - replicasets
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - apps
              resources:
              - statefulsets
              - deployments
              - replicasets
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - ""
              resources:
              - nodes/stats
              verbs:
              - get
            - nonResourceURLs:
              - /metrics
              verbs:
              - get
          
          serviceAccount:
            name: metricbeat
          
          clusterRoleBinding:
            name: metricbeat
            subjects:
            - kind: ServiceAccount
              name: metricbeat
            roleRef:
              kind: ClusterRole
              name: metricbeat
              apiGroup: rbac.authorization.k8s.io
              
  destination:
    server: https://kubernetes.default.svc
    namespace: elastic-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
  name: kibana-ingress
  namespace: elastic-stack
spec:
  ingressClassName: nginx
  rules:
    - host: kibana.bira.local
      http:
        paths:
          - backend:
              service:
                name: kibana-kb-http
                port:
                  number: 5601
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - kibana.bira.local
      secretName: kibana-server-tls